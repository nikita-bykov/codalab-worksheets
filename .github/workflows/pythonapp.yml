name: Python application

on:
  # This will prevent builds from happening twice when somebody opens a pull request against master and then pushes updates to their branch.
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    #- name: revert python
    # run: |
        
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip # This path is specific to Ubuntu
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-codalab-cc
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Functionality
      env:
        CODALAB_USERNAME: codalab
        CODALAB_PASSWORD: codalab
      run: |
        #sudo rm /usr/local/bin/docker-compose
        #curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > docker-compose
        #chmod +x docker-compose
        #sudo mv docker-compose /usr/local/bin
        #sudo service mysql stop
        python3 codalab_service.py build services --version master --pull
        python3 codalab_service.py start --services default monitor --version master 
        python3 codalab_service.py test --version master default
        #docker restart codalab_worker_1 && python3 codalab_service.py test run --version master
        #docker stop codalab_worker_1
        python3 codalab_service.py start --services worker --version master --shared-file-system
        python3 codalab_service.py test --version master --shared-file-system basic run read write kill resources netcat netcurl workers

